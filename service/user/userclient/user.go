// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userclient

import (
	"context"

	"train-tiktok/service/user/types/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RelationActReq  = user.RelationActReq
	RelationActResp = user.RelationActResp
	Resp            = user.Resp
	UserReq         = user.UserReq
	UserResp        = user.UserResp

	User interface {
		User(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error)
		RelationAct(ctx context.Context, in *RelationActReq, opts ...grpc.CallOption) (*RelationActResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) User(ctx context.Context, in *UserReq, opts ...grpc.CallOption) (*UserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.User(ctx, in, opts...)
}

func (m *defaultUser) RelationAct(ctx context.Context, in *RelationActReq, opts ...grpc.CallOption) (*RelationActResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.RelationAct(ctx, in, opts...)
}
