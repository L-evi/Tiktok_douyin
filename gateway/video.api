syntax = "v1"

info(
    title: "video"
    desc: "video proc file"
)

import "common.api"

type publishActionReq {
    Token string `form:"token"`
    //   data byte `form:"data"` // handler from l.r.FormFile
    Title string `form:"Title"`
}

type (
    FavoriteActionReq {
        Token string `form:"token"`
        VideoId int64 `form:"video_id"`
        ActionType int32 `form:"action_type"` // 1: favorite, 2: unfavorite
    }
    FavoriteActionResp {
        Resp
    }
)

type (
    FavoriteListReq {
        Token string `form:"token"`
        UserId int64 `form:"user_id"`
    }
    FovoriteListResp {
        Resp
        VideoList []Video `json:"video_list"`
    }

)

type (
    CommentActionReq {
        Token string `form:"token"`
        VideoId int64 `form:"video_id"`
        ActionType int32 `form:"action_type"`
        CommentText string `form:"comment_text"`
        CommentId int64 `form:"comment_id"`
    }
    CommentActionResp {
        Resp
        Comment
    }

)

type (
    CommentListReq {
        Token string `form:"token"`
        VideoId int64 `form:"video_id"`
    }
    CommentListResp {
        Resp
        CommentList []Comment `json:"comment_list"`
    }
)



type (
    Video {
        Id int64 `json:"id"`
        Author Author `json:"author"`
        PlayUrl string `json:"play_url"`
        CoverUrl string `json:"cover_url"`
        FavoriteCount int64 `json:"favorite_count"`
        CommentCount int64 `json:"comment_count"`
        IsFavorite bool `json:"is_favorite"`
        Title string `json:"title"`
    }

    Author {
        Id int64 `json:"id"`
        Name string `json:"name"`
        FollowCount int64 `json:"follow_count"`
        FollowerCount int64 `json:"follower_count"`
        IsFollow bool `json:"is_follow"`
    }

    publishListReq {
        Token string `form:"token"`
        UserId int64 `form:"user_id"`
    }
    publishListResp {
        Resp
        VideoList []Video `json:"video_list"`
    }
)

type (
    feedReq {
        Token string `form:"token"`
        LatestTime int64 `form:"latest_time"`
    }
    feedResp {
        Resp
        VideoList []Video `json:"video_list"`
    }
)

@server(
    group: video
    middleware: AuthPass
)
service gateway {
    @handler publishList
    get /douyin/publish/list (publishListReq) returns (publishListResp) // TODO

    @handler feed
    get /douyin/feed (feedReq) returns (feedResp)
}


@server(
    group: video
    middleware: Auth
)
service gateway {
    @handler publishAction
    post /douyin/publish/action (publishActionReq) returns (Resp)

    @handler favoriteAction
    post /douyin/favorite/action (FavoriteActionReq) returns (FavoriteActionResp)

    @handler favoriteList
    get /douyin/favorite/list (FavoriteListReq) returns (FovoriteListResp)

    @handler commentAction
    post /douyin/comment/action (CommentActionReq) returns (CommentActionResp)

    @handler commentList
    get /douyin/comment/list (CommentListReq) returns (CommentListResp)
}